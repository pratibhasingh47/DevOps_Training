

Forking - refers to creating a new process by duplicating an exisitng process
PPID - parent process->child process
if process is complete but still process does not release its pid then ->Zombie process

process state flags
Running - R
Sleeping - S
Uninterupted Sleep - D
Idle - I
Kernel - K
Stopped - T
Zombie - Z
Dead - X

----------------------------------------------------------------------------------------------------


ps -aux
user generated
system generated(booting process , system D)

USER
PID
%CPU
%MEM
VSZ - virtual memory size
RSS - resident size
TTY -?(process are not engaging terminal)
STAT - S,R....process state code
START - time when process start
TIME - total cpu time
COMMAND - command through which process generated

ps->to track pid
ps -a
ps -l
ps -au
ps -ef


----------------------------------------------------------------------------------------------------


JOBS & Session

jobs
send job background to run using ampersand &
sleep 100&

fg %n bring the n command to foreground from background
to stopped any process ctrl+z
fg %3
sleep 1000
^Z
[3]+  Stopped                 sleep 1000

bg %3
resume the stopped process to running

kill -l
pstree [process tree if any parent will kill then all the child process will also kill]

kill -9(kill forcefully)

kill -9 1 ( it cannot overwrite or kill systemd )

kill -20 to stopp any process no need to bring it foreground
kill -18 to resume the stopped process

pkill sleep* to terminate all sleep process

tty- to check terminal
pkill -t pts/2 -> to kill all the process in terminal 2 even the shell is killed

pkill -p pid (to kill process from parentid)


NICE value NI
-20 Highest priority
+19 Lowest priority


by default nice value is 0
ps -o nice,pid,comm
nice -n -20 sleep 9000&
renice -n +19 592440



----------------------------------------------------------------------------------------------------

Services -  continous running program (process)

Daemons - program[eg. sshd ]
a computer program that runs in the background of an operating system (OS) to perform specific tasks

systemctl start sshd
systemctl stop sshd

systemctl status sshd
systemctl restart sshd

systemctl disable sshd
systemctl enable sshd

systemctl enable --now sshd (also start service at same time)
systemctl reload sshd (to reload and read configurations)

systemctl mask sshd (protect the system and restrit to perform any systemctl changes)
systemctl unmask sshd(remove protection)


----------------------------------------------------------------------------------------------------


BOOTING Services
1.power ON
2.BIOS basic i/o system
3.POST Power on Self Test
4.Bootable Device
5.MBR [Master Boot Recoder]
 -bootloader(kernelLoad)
 -partitionTable
 -checksum
INIT RAMfs (mini - compressed image to run kernel then only kernel starts/load)
6.systemd starts now
1-6[read only permission]

After systemd the one of two targets can be hit
graphical target (GUI SHell)
multi user target (CLI Shell)

systemctl get-default
->graphical.target

systemctl set-default graphical.target
systemctl isolate graphical.target

systemctl set-default multi-user.target
systemctl isolate multi-user.target


----------------------------------------------------------------------------------------------------



